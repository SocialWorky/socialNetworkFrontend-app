@use 'src/assets/styles/worky-variables.scss' as var;
@use 'src/assets/styles/worky-palettes.scss' as color;
@use 'src/assets/styles/worky-breakpoints.scss' as breakpoints;
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// @import '@ctrl/ngx-emoji-mart/picker';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$app-primary: mat.define-palette(mat.$indigo-palette);
$app-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$app-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$app-theme: mat.define-light-theme((
  color: (
    primary: $app-primary,
    accent: $app-accent,
    warn: $app-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($app-theme);

/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
// @import "@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
// @import "@ionic/angular/css/normalize.css";
// @import "@ionic/angular/css/structure.css";
// @import "@ionic/angular/css/typography.css";
// @import '@ionic/angular/css/display.css';

/* Optional CSS utils that can be commented out */
// @import "@ionic/angular/css/padding.css";
// @import "@ionic/angular/css/float-elements.css";
// @import "@ionic/angular/css/text-alignment.css";
// @import "@ionic/angular/css/text-transformation.css";
// @import "@ionic/angular/css/flex-utils.css";


html, body { height: 100%; }
body { 
  margin: 0;
  font-family: var.$worky-font-family-global;
  background-color: color.$worky-color-app-background;
}

.content-worky {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  position: relative;
  width: 100%;
  height: 100% !important;
  overflow: hidden;
}

.fast {
    -webkit-animation-duration: 1.5s;
    animation-duration: 1.5s;
    -webkit-animation-fill-mode:both;
    animation-fill-mode:both
}

@-webkit-keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
.fadeIn {
  -webkit-animation-name: fadeIn;
  animation-name: fadeIn;
}

 .worky-input {
    .mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label {
      top: calc(var(--mat-form-field-container-height) / 2);
      background-color: color.$worky-color-light;
    }
    .mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mdc-floating-label--float-above {
      top: calc(var(--mat-form-field-container-height) / 4);
    }
    .mdc-line-ripple {
      display: none;
    }
    .mat-mdc-text-field-wrapper {
      width: 100%;
      border: 1px solid color.$worky-color-navy;
      border-radius: 8px;
    }
    .mdc-text-field {
      overflow: visible;
      .mat-mdc-form-field-focus-overlay {
        background-color: color.$worky-color-light;
      }
    }
    .mdc-text-field--filled:not(.mdc-text-field--disabled) {
      background-color: color.$worky-color-light;
    }
    .mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-focus-overlay {
      background-color: color.$worky-color-light;
    }
    .mat-mdc-form-field.mat-focused:not(:focus) .mat-mdc-form-field-focus-overlay {
      background-color: color.$worky-color-light;
    }
    .mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay {
      background-color: color.$worky-color-light;
    }
    .mat-mdc-text-field--focused {
      border-color: color.$worky-color-blue;
    }
  }

  .worky-input.worky-accent {
    .mdc-text-field--focused {
      border: 1px solid color.$worky-color-blue;
      .mat-mdc-floating-label.mdc-floating-label {
        color: color.$worky-color-blue;
      }
    }
    .mdc-text-field--invalid {
      border: 1px solid color.$worky-color-red;
      .mat-mdc-floating-label.mdc-floating-label {
        color: color.$worky-color-red;
      }
    }
  }

  .worky-input.worky-warn {
    .mdc-text-field--focused {
      border: 1px solid color.$worky-color-red;
      .mat-mdc-floating-label.mdc-floating-label {
        color: color.$worky-color-red;
      }
    }
    .mdc-text-field--invalid {
      border: 1px solid color.$worky-color-red;
      .mat-mdc-floating-label.mdc-floating-label {
        color: color.$worky-color-red;
      }
    }
  }

  .worky-input.worky-primary {
    .mdc-text-field--focused {
      border: 1px solid color.$worky-color-teal;
      .mat-mdc-floating-label.mdc-floating-label {
        color: color.$worky-color-teal;
      }
    }
    .mdc-text-field--invalid {
      border: 1px solid color.$worky-color-red;
      .mat-mdc-floating-label.mdc-floating-label {
        color: color.$worky-color-red;
      }
    }
  }

  .worky-input.worky-basic {
    .mdc-text-field--focused {
      border: 1px solid color.$worky-color-navy;
      .mat-mdc-floating-label.mdc-floating-label {
        color: color.$worky-color-navy;
      }
    }
    .mdc-text-field--invalid {
      border: 1px solid color.$worky-color-red;
      .mat-mdc-floating-label.mdc-floating-label {
        color: color.$worky-color-red;
      }
    }
  }

  .nav-link {
    color: color.$worky-color-light;
    display: flex;
    padding: 2px 6px;
    align-items: center;

    .badge-notification {
      background-color: color.$worky-color-warn;
      font-size: var.$worky-font-size-1;
      border-radius: 50%;
      padding: 3px 7px;
      margin-left: -10px;
      margin-top: -15px;
      display: flex;
      align-items: center;
    }
  }

  /* HTML: <div class="loader"></div> */
  .loader {
    width: 50px;
    aspect-ratio: 1;
    display: grid;
    margin: auto;
    border: 4px solid #0000;
    border-radius: 50%;
    border-color: #ccc #0000;
    animation: l16 1s infinite linear;
  }
  .loader::before,
  .loader::after {    
    content: "";
    grid-area: 1/1;
    margin: 2px;
    border: inherit;
    border-radius: 50%;
  }
  .loader::before {
    border-color: #f03355 #0000;
    animation: inherit; 
    animation-duration: .5s;
    animation-direction: reverse;
  }
  .loader::after {
    margin: 8px;
  }
  @keyframes l16 { 
    100%{transform: rotate(1turn)}
  }

  // worky container module
  .worky-module-container {
    margin: 15px 4px;
    border: 0px solid #e4e6ebe0;
    border-radius: max(0px, min(8px, calc((100vw - 4px - 100%) * 9999))) / 8px;
    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.05);

    @include breakpoints.below-sm {
      margin: 15px -1px 0px -1px;
    }

  }

  .container-widget {
    height: auto;
  }

  .link-preview {
    display: flex;
    overflow: hidden;
    max-height: 150px;
    cursor: pointer;
    border: 1px solid #cccccc70;
    box-shadow: 0px 0px 20px 4px rgb(0 0 0 / 7%);
    border-radius: 12px;
    padding: 10px;
    margin: 10px 10px;
  }

  .link-preview-content {
    display: flex;
    align-items: center;
    justify-content: flex-start;
  }

  .link-preview-info {
    display: flex;
    flex-direction: column;
    h3 {
      font-size: 1.2rem;
      margin: 0;
      display: -webkit-box;
      -webkit-box-orient: vertical;
      -webkit-line-clamp: 2;
      overflow: hidden;  
      color: map-get(color.$worky-navy, 100);
    }
    p {
      padding: 5px;
      font-size: 1rem;
      color: map-get(color.$worky-navy, 56);
      margin: 0;
      display: -webkit-box;
      -webkit-box-orient: vertical;
      -webkit-line-clamp: 3;
      overflow: hidden;  
    }
  }

.cdk-global-overlay-wrapper .cdk-overlay-pane {
  @include breakpoints.below-sm {
    max-width: 100% !important;
    width: 95%;
  }
}

.no-select-text {
  user-select: none; 
  -webkit-user-select: none;
  -ms-user-select: none;
}

.markdown h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

.markdown h2 {
  font-size: 1.5em;
  margin: 0.75em 0;
}

.markdown h3 {
  font-size: 1.17em;
  margin: 0.83em 0;
}

.markdown ul {
  list-style-type: disc;
  padding-left: 20px;
}

.markdown ol {
  list-style-type: decimal;
  padding-left: 20px;
}

.markdown blockquote {
  padding: 10px 20px;
  margin: 0;
  border-left: 5px solid #ccc;
  color: #666;
}

.markdown pre {
  background: #000000e7;
  padding: 0.5em;
  border-radius: 4px;
  overflow-x: auto;
}

.markdown code {
  font-family: 'Source Code Pro', monospace;
  font-size: 14px;
  color: #f5f5f5;
}

.markdown pre code {
  white-space: pre-wrap;
  word-wrap: break-word;
}
