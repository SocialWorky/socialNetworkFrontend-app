name: Update Container on Portainer

on:
  push:
    branches:
      - development

jobs:
  update-container:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Crear archivo .env desde secretos
        run: |
          echo "NG_APP_BASE_URL=${{ secrets.NG_APP_BASE_URL }}" > .env
          echo "NG_APP_API_URL=${{ secrets.NG_APP_API_URL }}" >> .env
          echo "NG_APP_CLIEN_ID_GOOGLE=${{ secrets.NG_APP_CLIEN_ID_GOOGLE }}" >> .env
          echo "NG_APP_WSURL=${{ secrets.NG_APP_WSURL }}" >> .env
          echo "NG_APP_OPENCAGEAPIKEY=${{ secrets.NG_APP_OPENCAGEAPIKEY }}" >> .env
          echo "NG_APP_APIGEOLOCATIONS=${{ secrets.NG_APP_APIGEOLOCATIONS }}" >> .env
          echo "NG_APP_APIWEATHERURL=${{ secrets.NG_APP_APIWEATHERURL }}" >> .env
          echo "NG_APP_APIWEATHERTOKEN=${{ secrets.NG_APP_APIWEATHERTOKEN }}" >> .env
          echo "NG_APP_APIFILESERVICE=${{ secrets.NG_APP_APIFILESERVICE }}" >> .env
          echo "NG_APP_APIMESSAGESERVICE=${{ secrets.NG_APP_APIMESSAGESERVICE }}" >> .env
          echo "NG_APP_APINOTIFICATIONCENTER=${{ secrets.NG_APP_APINOTIFICATIONCENTER }}" >> .env
          echo "NG_APP_GIPHYAPIKEY=${{ secrets.NG_APP_GIPHYAPIKEY }}" >> .env
          echo "NG_APP_TEMPLATE_EMAIL_LOGO=${{ secrets.NG_APP_TEMPLATE_EMAIL_LOGO }}" >> .env
          echo "NG_APP_META_TITLE=${{ secrets.NG_APP_META_TITLE }}" >> .env
          echo "NG_APP_META_DESCRIPTION=${{ secrets.NG_APP_META_DESCRIPTION }}" >> .env
          echo "NG_APP_META_KEYWORDS=${{ secrets.NG_APP_META_KEYWORDS }}" >> .env
          echo "NG_APP_META_IMAGE=${{ secrets.NG_APP_META_IMAGE }}" >> .env
          echo "NG_APP_META_URL=${{ secrets.NG_APP_META_URL }}" >> .env
          echo "NG_APP_META_OG_SITE_NAME=${{ secrets.NG_APP_META_OG_SITE_NAME }}" >> .env
          echo "NG_APP_META_OG_TITLE=${{ secrets.NG_APP_META_OG_TITLE }}" >> .env
          echo "NG_APP_META_OG_DESCRIPTION=${{ secrets.NG_APP_META_OG_DESCRIPTION }}" >> .env
          echo "NG_APP_META_OG_IMAGE=${{ secrets.NG_APP_META_OG_IMAGE }}" >> .env
          echo "NG_APP_META_OG_URL=${{ secrets.NG_APP_META_OG_URL }}" >> .env
          echo "NG_APP_META_TWITTER_CARD=${{ secrets.NG_APP_META_TWITTER_CARD }}" >> .env
          echo "NG_APP_META_TWITTER_TITLE=${{ secrets.NG_APP_META_TWITTER_TITLE }}" >> .env
          echo "NG_APP_META_TWITTER_DESCRIPTION=${{ secrets.NG_APP_META_TWITTER_DESCRIPTION }}" >> .env
          echo "NG_APP_META_TWITTER_IMAGE=${{ secrets.NG_APP_META_TWITTER_IMAGE }}" >> .env
          echo "NG_APP_META_TWITTER_URL=${{ secrets.NG_APP_META_TWITTER_URL }}" >> .env

      - name: Build and push Docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "Iniciando la construcción y el empuje de la imagen Docker..."
          docker build -t socialworky/worky-frontend-dev:${{ github.sha }} .
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker push socialworky/worky-frontend-dev:${{ github.sha }}
          echo "Construcción y empuje de la imagen Docker completados."

      - name: Deploy stack to Portainer
        uses: carlrygart/portainer-stack-deploy@v1
        with:
          portainer-host: https://portainer-dev.worky.cl
          username: ${{ secrets.PORTAINER_USERNAME }}
          password: ${{ secrets.PORTAINER_PASSWORD }}
          stack-name: 'worky-frontend-dev'
          stack-definition: 'docker-compose-worky.dev.yml'
          image: socialworky/worky-frontend-dev:${{ github.sha }}
        env:
          GIT_SHA: ${{ github.sha }}
