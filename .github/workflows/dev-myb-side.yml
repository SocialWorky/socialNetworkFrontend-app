name: Update Dev Myb-side

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Tag de la versi贸n'
        required: true
        default: 'latest'

jobs:
  update-container:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Crear archivo .env desde secretos
        run: |
          echo "NG_APP_BASE_URL=${{ secrets.NG_APP_DEV_BSIDE_BASE_URL }}" > .env
          echo "NG_APP_API_URL=${{ secrets.NG_APP_DEV_BSIDE_API_URL }}" >> .env
          echo "NG_APP_CLIEN_ID_GOOGLE=${{ secrets.NG_APP_BSIDE_CLIEN_ID_GOOGLE }}" >> .env
          echo "NG_APP_WSURL=${{ secrets.NG_APP_DEV_BSIDE_WSURL }}" >> .env
          echo "NG_APP_OPENCAGEAPIKEY=${{ secrets.NG_APP_OPENCAGEAPIKEY }}" >> .env
          echo "NG_APP_APIGEOLOCATIONS=${{ secrets.NG_APP_DEV_BSIDE_APIGEOLOCATIONS }}" >> .env
          echo "NG_APP_APIWEATHERURL=${{ secrets.NG_APP_APIWEATHERURL }}" >> .env
          echo "NG_APP_APIWEATHERTOKEN=${{ secrets.NG_APP_APIWEATHERTOKEN }}" >> .env
          echo "NG_APP_APIFILESERVICE=${{ secrets.NG_APP_DEV_BSIDE_APIFILESERVICE }}" >> .env
          echo "NG_APP_APIMESSAGESERVICE=${{ secrets.NG_APP_DEV_BSIDE_APIMESSAGESERVICE }}" >> .env
          echo "NG_APP_APINOTIFICATIONCENTER=${{ secrets.NG_APP_DEV_BSIDE_APINOTIFICATIONCENTER }}" >> .env
          echo "NG_APP_GIPHYAPIKEY=${{ secrets.NG_APP_GIPHYAPIKEY }}" >> .env
          echo "NG_APP_TEMPLATE_EMAIL_LOGO=${{ secrets.NG_APP_BSIDE_TEMPLATE_EMAIL_LOGO }}" >> .env
          echo "NG_APP_META_TITLE=${{ secrets.NG_APP_BSIDE_META_TITLE }}" >> .env
          echo "NG_APP_META_DESCRIPTION=${{ secrets.NG_APP_BSIDE_META_DESCRIPTION }}" >> .env
          echo "NG_APP_META_KEYWORDS=${{ secrets.NG_APP_BSIDE_META_KEYWORDS }}" >> .env
          echo "NG_APP_META_IMAGE=${{ secrets.NG_APP_BSIDE_META_IMAGE }}" >> .env
          echo "NG_APP_META_URL=${{ secrets.NG_APP_BSIDE_META_URL }}" >> .env
          echo "NG_APP_META_OG_SITE_NAME=${{ secrets.NG_APP_BSIDE_META_OG_SITE_NAME }}" >> .env
          echo "NG_APP_META_OG_TITLE=${{ secrets.NG_APP_BSIDE_META_OG_TITLE }}" >> .env
          echo "NG_APP_META_OG_DESCRIPTION=${{ secrets.NG_APP_BSIDE_META_OG_DESCRIPTION }}" >> .env
          echo "NG_APP_META_OG_IMAGE=${{ secrets.NG_APP_BSIDE_META_OG_IMAGE }}" >> .env
          echo "NG_APP_META_OG_URL=${{ secrets.NG_APP_BSIDE_META_OG_URL }}" >> .env
          echo "NG_APP_META_TWITTER_CARD=${{ secrets.NG_APP_BSIDE_META_TWITTER_CARD }}" >> .env
          echo "NG_APP_META_TWITTER_TITLE=${{ secrets.NG_APP_BSIDE_META_TWITTER_TITLE }}" >> .env
          echo "NG_APP_META_TWITTER_DESCRIPTION=${{ secrets.NG_APP_BSIDE_META_TWITTER_DESCRIPTION }}" >> .env
          echo "NG_APP_META_TWITTER_IMAGE=${{ secrets.NG_APP_BSIDE_META_TWITTER_IMAGE }}" >> .env
          echo "NG_APP_META_TWITTER_URL=${{ secrets.NG_APP_BSIDE_META_TWITTER_URL }}" >> .env
          echo "NG_APP_PWA_NAME=${{ secrets.NG_APP_BSIDE_PWA_NAME }}" >> .env
          echo "NG_APP_PWA_SHORT_NAME=${{ secrets.NG_APP_BSIDE_PWA_SHORT_NAME }}" >> .env
          echo "NG_APP_PWA_THEME_COLOR=${{ secrets.NG_APP_BSIDE_PWA_THEME_COLOR }}" >> .env
          echo "NG_APP_PWA_BACKGROUND_COLOR=${{ secrets.NG_APP_BSIDE_PWA_BACKGROUND_COLOR }}" >> .env
          echo "NG_APP_CACHE_ENABLED=true" >> .env

      - name: Instalar herramientas de compilaci贸n
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python3

      - name: Verificar variables de entorno
        run: |
          echo "Variables de entorno cargadas:"
          cat .env

      - name: Build and push Docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "Iniciando la construcci贸n y el empuje de la imagen Docker..."
          docker build --no-cache -t socialworky/myb-side:dev-${{ github.event.inputs.image_tag }} .
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker push socialworky/myb-side:dev-${{ github.event.inputs.image_tag }}
          echo "Construcci贸n y empuje de la imagen Docker completados."
